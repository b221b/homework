
Лабораторная 5-3

https://dmitripavlutin.com/javascript-this-interview-questions/


1.
Создать функцию - конструктор объета с полями name, age, profession
где параметр profession имеет по умолчанию значение "unknown"
Проверить работу при вызове без параметра profession .
Проверить, что происходит если при вызове конструктора указать значение
параметра profession равным NaN, false ?

2.
Создайте объект calculator (калькулятор) с пятью методами:

read() (читать) запрашивает два значения, 
проверяет, что это числа  и 
сохраняет их как свойства объекта.

sum() (суммировать) возвращает сумму сохранённых значений.

mul() (умножить) перемножает сохранённые значения и возвращает результат.

substr() (отнять) возвращает разность первого и второго сохранённых значений

div() (делить) возвращает результат деления второго из 
сохранённых значений на первое. 

3.
 С помощью функции-конструктора создайте три разных объекта
   содержащих два поля - название книги и её цена и метод,
   который их выводит


4.

У нас есть объект ladder (лестница), который позволяет подниматься и спускаться:

let ladder = {
  step: 0,
  up() {
    this.step++;
  },
  down() {
    this.step--;
  },
  showStep: function() { // показывает текущую ступеньку
    alert( this.step );
  }
};
Теперь, если нам нужно выполнить несколько последовательных вызовов, 
мы можем сделать это так:

ladder.up();
ladder.up();
ladder.down();
ladder.showStep(); // 1
ladder.down();
ladder.showStep(); // 0

Измените код методов up, down и showStep таким образом, 
чтобы:
 
a.
 номер ступеньки никогда не становился отрицательным

b.

 вызов ladder.up() и ladder.down() можно было сделать по цепочке, например так:

ladder.up().up().down().showStep().down().showStep();
 // показывает 1 затем 0
 
Такой подход широко используется в библиотеках JavaScript.

5.

Создайте два объекта  и сравните результат вызова их метода:

a.
const call = {
  caller: "mom", 
  says: function() {
    console.log(`Hey, ${this.caller} just called.`);
  }
};

Вызов
call.says();

б.
const call = {
  caller: "mom", 
  says: () => {
    console.log(`Hey, ${this.caller} just called.`);
  }
};

Вызов
call.says();

Объясните результат

6. 
 Создайте уникальный символ unique с помощью функции Symbol()
 Создайте объект user содержащий свойства( ключи )name, age, profession, salary, unique
 и некторые их значения.
 
 С помощью цикла
 
 for ...in перечислите значения этих свойств.
